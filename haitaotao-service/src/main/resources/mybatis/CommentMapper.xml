<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haitaotao.mapper.CommentMapper" >

	<resultMap id="BaseResultMap" type="com.haitaotao.entity.Comment" >
		<id column="id" property="id" />
		<result column="value_id" property="valueId" />
		<result column="type" property="type" />
		<result column="content" property="content" />
		<result column="admin_content" property="adminContent" />
		<result column="user_id" property="userId" />
		<result column="has_picture" property="hasPicture" />
		<result column="pic_urls" property="picUrls" />
		<result column="star" property="star" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="deleted" property="deleted" />
	</resultMap>

	<sql id="Base_Column_List" >
		`id`, `value_id`, `type`, `content`, `admin_content`, `user_id`, `has_picture`, `pic_urls`, `star`, `create_time`, `update_time`, `deleted`
	</sql>

	<!-- 根据PrimaryKey查询评论表 -->
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
		select
		<include refid="Base_Column_List" />
		from haitaotao_comment
		<where>
			id = #{id} and `deleted` = 0
		</where>
	</select>

	<!-- 条件查询评论表 -->
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.haitaotao.entity.Comment" >
		select
		<include refid="Base_Column_List" />
		from haitaotao_comment
		<where>
			and `deleted` = 0
			<if test="valueId != null" >
				and `value_id` = #{valueId}
			</if>
			<if test="type != null" >
				and `type` = #{type}
			</if>
			<if test="userId != null" >
				and `user_id` = #{userId}
			</if>
		</where>
		order by `create_time` desc
	</select>

	<!-- 插入评论表 -->
	<insert id="insert" parameterType="com.haitaotao.entity.Comment" >
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into haitaotao_comment
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="valueId != null" >
                `value_id`,
            </if>
			<if test="type != null" >
                `type`,
            </if>
			<if test="content != null" >
                `content`,
            </if>
			<if test="adminContent != null" >
                `admin_content`,
            </if>
			<if test="userId != null" >
                `user_id`,
            </if>
			<if test="hasPicture != null" >
                `has_picture`,
            </if>
			<if test="picUrls != null" >
                `pic_urls`,
            </if>
			<if test="star != null" >
                `star`,
            </if>
			`create_time`,
			`update_time`,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="valueId != null" >
				#{valueId},
			</if>
			<if test="type != null" >
				#{type},
			</if>
			<if test="content != null" >
				#{content},
			</if>
			<if test="adminContent != null" >
				#{adminContent},
			</if>
			<if test="userId != null" >
				#{userId},
			</if>
			<if test="hasPicture != null" >
				#{hasPicture},
			</if>
			<if test="picUrls != null" >
				#{picUrls},
			</if>
			<if test="star != null" >
				#{star},
			</if>
			now(),
			now(),
		</trim>
	</insert>

	<!-- 根据PrimaryKey更新评论表 -->
	<update id="updateById" parameterType="com.haitaotao.entity.Comment" >
		update haitaotao_comment
		<set >
			<if test="valueId != null" >
				`value_id` = #{valueId},
			</if>
			<if test="type != null" >
				`type` = #{type},
			</if>
			<if test="content != null and content != ''" >
				`content` = #{content},
			</if>
			<if test="adminContent != null and adminContent != ''" >
				`admin_content` = #{adminContent},
			</if>
			<if test="userId != null" >
				`user_id` = #{userId},
			</if>
			<if test="hasPicture != null" >
				`has_picture` = #{hasPicture},
			</if>
			<if test="picUrls != null and picUrls != ''" >
				`pic_urls` = #{picUrls},
			</if>
			<if test="star != null" >
				`star` = #{star},
			</if>
			`update_time` = now(),
		</set>
		<where>
			id = #{id} and `deleted` = 0
		</where>
	</update>

	<!-- 根据PrimaryKey删除评论表 -->
	<update id="removeById" parameterType="java.lang.Long">
        update haitaotao_comment set `deleted` = 1 where id = #{id} and `deleted` = 0
	</update>

</mapper>
